<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CodeGen" #>
using AutoMapper;
using Portal.Core.Models;
using Portal.Core.ViewModels;
using Portal.Repository;
using Portal.Service;
using System.Collections.Generic;
using System.Linq;

namespace Portal.Service
{
    public class <#= Config.Model #>Service : ServiceBase, I<#= Config.Model #>Service
    {
        public <#= Config.Model #>Service(IMapper mapper, IUnitOfWork uow) : base(mapper, uow)
        {
        }

        public void Create(<#= Config.Model #>AddModel model)
        {
            var <#= Config.Model #> = Mapper.Map<<#= Config.Model #>AddModel, <#= Config.Model #>>(model);
            var new<#= Config.Model #> = Uow.<#= Config.Model #>s.Create(<#= Config.Model #>);
            Uow.Commit();
        }

        public IEnumerable<<#= Config.Model #>ViewModel> GetAll()
        {
            var model = Uow.<#= Config.Model #>s.GetAll()
                .Select(Mapper.Map<<#= Config.Model #>ViewModel>);
            return model;
        }

        public <#= Config.Model #>ViewModel Get(int id)
        {
            var <#= Config.ModelLower #> = Uow.<#= Config.Model #>s.SingleOrDefault(p => p.Id == id);
            var model = Mapper.Map<<#= Config.Model #>, <#= Config.Model #>ViewModel>(<#= Config.ModelLower #>);
            return model;
        }


        public void Update(<#= Config.Model #>ViewModel model)
        {
            var <#= Config.ModelLower #> = Uow.<#= Config.Model #>s.Get(model.Id);

		    <#foreach (var prop in Config.PropertyNames.Where(p=>p !="Id" && p!="TimeCreated")){#>
<#= Config.ModelLower #>.<#=prop#> = model.<#=prop#>;
			<#}#>
Uow.Commit();
        }

        public void Delete(int id)
        {
            var <#= Config.Model #> = Uow.<#= Config.Model #>s.Get(id);
            Uow.<#= Config.Model #>s.Remove(<#= Config.Model #>);
            Uow.Commit();
        }

       
    }
}
